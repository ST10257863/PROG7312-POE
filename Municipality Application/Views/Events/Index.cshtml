@model IEnumerable<Municipality_Application.Models.Event>
@{
    ViewData["Title"] = "Local Events";
    var categories = ViewBag.Categories as HashSet<string>;
    var recommendations = ViewBag.Recommendations as IEnumerable<Municipality_Application.Models.Event>;
}

<div class="container mt-4">
    <h1 class="mb-4">Local Events & Announcements</h1>
    <form method="get" class="row mb-4" id="eventSearchForm">
        <div class="col-md-3">
            <input type="text" name="search" class="form-control" placeholder="Search by keyword..." />
        </div>
        <div class="col-md-3">
            <select name="category" class="form-select">
                <option value="">All Categories</option>
                @foreach (var cat in categories)
                {
                    <option value="@cat">@cat</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <input type="date" name="date" class="form-control" />
        </div>
        <div class="col-md-3">
            <button type="submit" class="btn btn-primary w-100">Search</button>
        </div>
        <div class="mb-3">
            <label for="EventAddress" class="form-label"><i class="bi bi-geo-alt"></i> Event Location</label>
            <input type="text" class="form-control" id="EventAddress" name="Address" placeholder="Enter event address or location" />
        </div>

        <input type="hidden" id="Latitude" name="Latitude" />
        <input type="hidden" id="Longitude" name="Longitude" />
    </form>

    <h4>Recommended Events</h4>
    <div class="row mb-3">
        @foreach (var ev in recommendations)
        {
            <div class="col-md-4 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@ev.Title</h5>
                        <p class="card-text">@ev.Description</p>
                        <span class="badge bg-info">@ev.Category</span>
                        <span class="badge bg-secondary">@ev.Date.ToShortDateString()</span>
                    </div>
                </div>
            </div>
        }
    </div>

    <h4>All Events</h4>
    <div class="row">
        @foreach (var ev in Model)
        {
            <div class="col-md-4 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@ev.Title</h5>
                        <p class="card-text">@ev.Description</p>
                        <span class="badge bg-info">@ev.Category</span>
                        <span class="badge bg-secondary">@ev.Date.ToShortDateString()</span>
                        <span class="badge bg-light text-dark">@ev.Location</span>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    @if (!string.IsNullOrEmpty(ViewBag.GoogleMapsApiKey as string))
    {
        <script src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.GoogleMapsApiKey&libraries=places"></script>
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var input = document.getElementById('EventAddress');
                if (input && window.google && google.maps && google.maps.places) {
                    var autocomplete = new google.maps.places.Autocomplete(input, {
                        types: ['geocode'],
                        componentRestrictions: { country: 'za' } // Restrict to South Africa
                    });
                    autocomplete.addListener('place_changed', function () {
                        var place = autocomplete.getPlace();
                        if (place.geometry) {
                            document.getElementById('Latitude').value = place.geometry.location.lat();
                            document.getElementById('Longitude').value = place.geometry.location.lng();
                        }
                    });
                }
            });
        </script>
    }
}